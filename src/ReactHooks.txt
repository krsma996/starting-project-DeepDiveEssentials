// ‚úÖ useState hook u Reactu
// --------------------------
// useState je React hook koji omoguƒáava komponentama da "pamte" podatke izmeƒëu renderovanja.
// Kada se stanje (state) promeni, React automatski rerenderuje komponentu da bi prikazao novu vrednost.

// ‚úÖ Pravilno kori≈°ƒáenje:
// - Hooks *uvek* defini≈°i na vrhu funkcionalne komponente (top-level).
// - Hooks se mogu koristiti samo unutar funkcionalnih komponenti ili drugih custom hook-ova.
// - Hooks se uvek zovu sa `use` prefixom (npr. useState, useEffect, useMemo...).

// ‚úÖ Sintaksa:
// const [value, setValue] = useState(initialValue);

// value      -> trenutna vrednost stanja
// setValue   -> funkcija za a≈æuriranje vrednosti (triggeruje rerender)

// ‚úÖ Primer:
import { useState } from 'react';

function App() {
  // Inicijalizacija stanja sa podrazumevanom vredno≈°ƒáu
  const [message, setMessage] = useState('Please click a button');

  // Funkcija koja a≈æurira stanje
  const handleClick = () => {
    setMessage('Button was clicked!');
  };

  return (
    <div>
      <p>{message}</p>
      <button onClick={handleClick}>Click me</button>
    </div>
  );
}

// ‚úÖ Dodatni saveti:
// - useState mo≈æe ƒçuvati bilo koji tip podataka: string, number, boolean, objekat, niz itd.
// - Ako koristi≈° funkciju kao inicijalnu vrednost: useState(() => complexInit()) ‚Äî ona ƒáe se pozvati samo jednom.
// - State update se ne de≈°ava odmah, veƒá React planira rerender ‚Äî zato ne oƒçekuj instant promenu vrednosti odmah posle setValue().

// üß† Za pamƒáenje:
// [vrednost, funkcijaZaPromenu] = useState(pocetnaVrednost);


/*

function App() {
  const [selectedTopic, setSelectedTopic] = useState("components");
  function onClick(selectedTab) {
    setSelectedTopic(selectedTab);
    console.log(selectedTopic);
  }


            <TabButton onClick={() => onClick("components")}>
              Components
            </TabButton>
            <TabButton onClick={() => onClick("jsx")}>JSX</TabButton>
            <TabButton onClick={() => onClick("state")}>State</TabButton>
            <TabButton onClick={() => onClick("props")}>Props</TabButton>



            posto gore setSelectedTab je nova azurirana vrednost 
            a currentTab je trenutna vrednost
            posto u tab button se poziva callback funckija to sto znaci da ce se kasnije pozvati 
            da bi mogao efektivno da prosledim funkciju komponenti koja prosledjuje event klikove

            e sad EXAMPLES gore sto se importuje u App.jsx
            sva ona polja moraju da budu ista kao i kod onClick funckije koje se salje
            dakle sve malim slovima ( nije bitno ali u EXAMPLES je tako napisano)
*/
