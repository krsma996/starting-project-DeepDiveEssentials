/*
  Objašnjenje problema:

  Imamo globalnu promenljivu `tabContent` van React-ove kontrole:
  
    let tabContent = "Tab content";

  Funkcija `onClick` postavlja novu vrednost:
  
    function onClick(selectedTab) {
      tabContent = selectedTab;
      console.log(tabContent);
    }

  U JSX-u prikazujemo:

    <main>{tabContent}</main>

  Problem:
  React **ne zna** da se promenila vrednost `tabContent`, jer nije deo React-ovog stanja (state).
  React će **renderovati komponentu samo jednom**, i neće automatski osvežiti UI kada se `tabContent` izmeni običnim dodeljivanjem (`=`).

  Rešenje:
  Da bismo rekli React-u *"hej, nešto se promenilo, renderuj ponovo!"*, moramo koristiti `useState`.

  Kada koristimo `useState`, React zna kada se vrednost promeni i **automatski renderuje komponentu ponovo** sa novom vrednošću.

  Primer:
    const [tabContent, setTabContent] = useState("Tab content");

    function onClick(selectedTab) {
      setTabContent(selectedTab); // React sada zna da treba da re-renderuje
    }

  Zaključak:
  ✅ `useState` je React-ov način da prati promene vrednosti tokom vremena i pravilno ažurira UI.
  ❌ Promenljive definisane van `useState` se ne prate i ne pokreću render — React ih jednostavno ignoriše.

  🧠 Pamti: Ako želiš da UI reaguje na promenu podataka → koristi `useState`!
*/
